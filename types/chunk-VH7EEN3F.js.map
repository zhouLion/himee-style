{"version":3,"sources":["../src/provider/Provider.ts"],"sourcesContent":["export interface Options {\n  body?: never;\n  formData?: never;\n  path?: never;\n  query?: never;\n}\n\nexport type RequestProvider = {\n  get(url: string, options: Options): Promise<unknown>;\n  post(url: string, options: Options): Promise<unknown>;\n  put(url: string, options: Options): Promise<unknown>;\n  head(url: string, options: Options): Promise<unknown>;\n  delete(url: string, options: Options): Promise<unknown>;\n  patch(url: string, options: Options): Promise<unknown>;\n};\n\nexport function handlerUrl(url: string, options: Options): string {\n  let _url = url;\n  if (options.path) {\n    Object.entries(options.path).forEach(([key, value]) => {\n      const _value = String(value);\n      if (!_value) throw new Error(`The path ${key} has no value`);\n      _url = _url.replace(`{${key}}`, _value);\n    });\n  }\n\n  if (options.query) {\n    const query = new URLSearchParams(options.query);\n    _url = `${_url}?${query}`;\n  }\n\n  return _url;\n}\n"],"mappings":";AAgBO,SAAS,WAAW,KAAa,SAA0B;AAChE,MAAI,OAAO;AACX,MAAI,QAAQ,MAAM;AAChB,WAAO,QAAQ,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACrD,YAAM,SAAS,OAAO,KAAK;AAC3B,UAAI,CAAC;AAAQ,cAAM,IAAI,MAAM,YAAY,kBAAkB;AAC3D,aAAO,KAAK,QAAQ,IAAI,QAAQ,MAAM;AAAA,IACxC,CAAC;AAAA,EACH;AAEA,MAAI,QAAQ,OAAO;AACjB,UAAM,QAAQ,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,WAAO,GAAG,QAAQ;AAAA,EACpB;AAEA,SAAO;AACT;","names":[]}