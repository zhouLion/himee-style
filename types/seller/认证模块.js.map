{"version":3,"sources":["../../src/seller/认证模块.ts"],"sourcesContent":["/**\n * @description: 认证信息\n */\nexport interface AuthInfo {\n    // 账号名\n    account?: string;\n    // 头像\n    avatarId?: number;\n    // 到期时间\n    expiration?: string;\n    // 过期时间（秒）\n    expire?: number;\n    // 有效期\n    expireMillis?: number;\n    // 用户名\n    name?: string;\n    // 刷新令牌\n    refreshToken?: string;\n    // 令牌\n    token?: string;\n    // 令牌类型\n    tokenType?: string;\n    // 用户id\n    userId?: number;\n    // 工作描述\n    workDescribe?: string;\n}\n\n/**\n * @description: 权限资源\n */\nexport interface AuthorityResourceDTO {\n    // 是否区分大小写\n    caseSensitive?: boolean;\n    // 是否启用URI/按钮权限\n    enabled?: boolean;\n    // 拥有的资源编码\n    resourceList?: string[];\n    // 拥有的角色编码\n    roleList?: string[];\n}\n\n/**\n * @description: 字典项\n */\nexport interface Dictionary {\n    // 编码\n    code?: string;\n    // 创建时间\n    createTime?: string;\n    // 创建人ID\n    createdBy?: number;\n    // 类选择器\n    cssClass?: string;\n    // css样式\n    cssStyle?: string;\n    // 描述\n    describe?: string;\n    // 图标\n    icon?: string;\n    // 主键\n    id?: number;\n    // 类型标签\n    label?: string;\n    // 名称\n    name?: string;\n    // 内置\n    readonly?: boolean;\n    // 排序\n    sortValue?: number;\n    // 状态\n    state?: boolean;\n    // 类型\n    type?: string;\n    // 最后修改时间\n    updateTime?: string;\n    // 最后修改人ID\n    updatedBy?: number;\n}\n\n/**\n * @description: 登录参数\n */\nexport interface LoginParamDTO {\n    // 账号\n    account?: string;\n    // 验证码\n    code?: string;\n    // 授权类型\n    grantType?: string;\n    // 验证码KEY\n    key?: string;\n    // 密码\n    password?: string;\n    // 刷新token\n    refreshToken?: string;\n}\n\nexport interface Map_string_List_Dictionary__ {\n    [index: string]: Array<unknown>;\n}\n\nexport interface Map_string_List_Option__ {\n    [index: string]: Array<unknown>;\n}\n\nexport interface Map_string_Map_string_string__ {\n    [index: string]: Record<string, unknown>;\n}\n\nexport interface Map_string_string_ {\n    [index: string]: string;\n}\n\n/**\n * @description: 菜单\n */\nexport interface Menu {\n    // 组件\n    component?: string;\n    // 创建时间\n    createTime?: string;\n    // 创建人ID\n    createdBy?: number;\n    // 实现类\n    customClass?: string;\n    // 数据范围\n    dataScope?: string;\n    // 描述\n    describe?: string;\n    // 分组\n    group?: string;\n    // 菜单图标\n    icon?: string;\n    // 主键\n    id?: number;\n    // 是否默认\n    isDef?: boolean;\n    // 通用菜单\n    isGeneral?: boolean;\n    // 名称\n    label?: string;\n    // 父ID\n    parentId?: number;\n    // 路径\n    path?: string;\n    // 内置\n    readonly?: boolean;\n    // 类型\n    resourceType?: string;\n    // 排序号\n    sortValue?: number;\n    // 状态\n    state?: boolean;\n    // 树层级\n    treeGrade?: number;\n    // 树路径\n    treePath?: string;\n    // 最后修改时间\n    updateTime?: string;\n    // 最后修改人ID\n    updatedBy?: number;\n}\n\n/**\n * @description: 下拉、多选组件选项\n */\nexport interface Option {\n    label?: string;\n    text?: string;\n    value?: string;\n}\n\nexport interface RouterMeta {\n    // 是否固定标签\n    affix?: boolean;\n    // 面包屑\n    breadcrumb?: boolean;\n    // 如果该路由会携带参数，且需要在tab页上面显示。则需要设置为true\n    carryParam?: boolean;\n    // 当前激活的菜单。用于配置详情页时左侧激活的菜单路径\n    currentActiveMenu?: string;\n    // 内嵌iframe的地址\n    frameSrc?: string;\n    // 隐藏该路由在面包屑上面的显示\n    hideBreadcrumb?: boolean;\n    // 当前路由不再菜单显示\n    hideMenu?: boolean;\n    // 当前路由不再标签页显示\n    hideTab?: boolean;\n    // 图标\n    icon?: string;\n    // 是否忽略KeepAlive缓存\n    ignoreKeepAlive?: boolean;\n    // 标题\n    title?: string;\n    // 指定该路由切换的动画名\n    transitionName?: string;\n}\n\nexport interface R_AuthInfo_ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    data?: AuthInfo;\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_AuthorityResourceDTO_ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    data?: AuthorityResourceDTO;\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_List_Menu__ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: Menu[];\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_List_VueRouter__ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: VueRouter[];\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_Map_string_List_Dictionary___ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: {\n        [index: string]: Dictionary[];\n    };\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_Map_string_List_Option___ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: {\n        [index: string]: Option[];\n    };\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_Map_string_Map_string_string___ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: {\n        [index: string]: {\n            [index: string]: string;\n        };\n    };\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_Map_string_string__ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: {\n        [index: string]: string;\n    };\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_boolean_ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: boolean;\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface R_string_ {\n    // 响应编码:0/200-请求处理成功\n    code?: number;\n    // 响应数据\n    data?: string;\n    // 异常消息\n    errorMsg?: string;\n    // 附加数据\n    extra?: any;\n    isSuccess?: boolean;\n    // 提示消息\n    msg?: string;\n    // 请求路径\n    path?: string;\n    // 响应时间戳\n    timestamp?: number;\n}\n\nexport interface VueRouter {\n    alwaysShow?: boolean;\n    // 组件\n    component?: string;\n    // 创建时间\n    createTime?: string;\n    // 创建人ID\n    createdBy?: number;\n    // 名称\n    label?: string;\n    meta?: RouterMeta;\n    // 菜单名称\n    name?: string;\n    // 路径\n    path?: string;\n    // 重定向\n    redirect?: string;\n    // 排序号\n    sortValue?: number;\n    // 最后修改时间\n    updateTime?: string;\n    // 最后修改人ID\n    updatedBy?: number;\n}\n\nexport interface TQueryOfcaptchaUsingGET {\n    // key\n    key: string;\n}\nexport type TResponseOfcaptchaUsingGET = any;\nexport interface TQueryOfcheckUsingGET_4 {\n    // code\n    code: string;\n    // key\n    key: string;\n}\nexport type TResponseOfcheckUsingGET_4 = R_boolean_;\nexport type TResponseOfverifyUsingGET = R_AuthInfo_;\nexport type TBodyOfcodeListUsingPOST = string[];\nexport type TResponseOfcodeListUsingPOST = R_Map_string_List_Option___;\nexport type TBodyOflistUsingPOST_1 = string[];\nexport type TResponseOflistUsingPOST_1 = R_Map_string_List_Dictionary___;\nexport type TBodyOfenumListsUsingPOST = string[];\nexport type TResponseOfenumListsUsingPOST = R_Map_string_List_Option___;\nexport type TBodyOfenumsUsingPOST = string[];\nexport type TResponseOfenumsUsingPOST = R_Map_string_Map_string_string___;\nexport interface TQueryOfmyMenusUsingGET {\n    // 菜单组\n    group?: string;\n    // 用户id\n    userId?: number;\n}\nexport type TResponseOfmyMenusUsingGET = R_List_Menu__;\nexport interface TQueryOfmyRouterUsingGET {\n    // 菜单组\n    group?: string;\n    // 用户id\n    userId?: number;\n}\nexport type TResponseOfmyRouterUsingGET = R_List_VueRouter__;\nexport type TBodyOfloginUsingPOST = LoginParamDTO;\nexport type TResponseOfloginUsingPOST = R_AuthInfo_;\nexport interface TQueryOflogoutUsingPOST_1 {\n    // clientId\n    clientId?: string;\n    // userId\n    userId?: number;\n}\nexport type TResponseOflogoutUsingPOST_1 = R_boolean_;\nexport type TBodyOffindParamsUsingPOST = string[];\nexport type TResponseOffindParamsUsingPOST = R_Map_string_string__;\nexport interface TQueryOfgetValueUsingGET {\n    // defVal\n    defVal?: string;\n    // key\n    key: string;\n}\nexport type TResponseOfgetValueUsingGET = R_string_;\nexport interface TQueryOfvisibleUsingGET {\n    // 菜单id\n    menuId?: number;\n    // 指定用户id\n    userId?: number;\n}\nexport type TResponseOfvisibleUsingGET = R_AuthorityResourceDTO_;\ntype MultipartFile = File;\n\nexport interface IApiFn {\n  (url: string): {\n    [m in \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\" | \"head\"]: (options: any) => Promise<any>;\n  };\n\n  (url: \"/anno/captcha\"): {\n    /**\n     * @description 验证码\n     * @see [Swagger doc: 验证码](http://120.79.250.86:8761/doc.html#/认证模块/登录接口/captchaUsingGET)\n     *\n     * @tag登录接口\n     */\n    get(options: { query: TQueryOfcaptchaUsingGET }): Promise<TResponseOfcaptchaUsingGET>;\n  };\n  (url: \"/anno/check\"): {\n    /**\n     * @description 验证验证码\n     * @see [Swagger doc: 验证验证码](http://120.79.250.86:8761/doc.html#/认证模块/登录接口/checkUsingGET_4)\n     *\n     * @tag登录接口\n     */\n    get(options: { query: TQueryOfcheckUsingGET_4 }): Promise<TResponseOfcheckUsingGET_4>;\n  };\n  (url: \"/anno/verify\"): {\n    /**\n     * @description 验证token\n     * @see [Swagger doc: 验证token](http://120.79.250.86:8761/doc.html#/认证模块/登录接口/verifyUsingGET)\n     *\n     * @tag登录接口\n     */\n    get(options: {}): Promise<TResponseOfverifyUsingGET>;\n  };\n  (url: \"/dictionary/codeList\"): {\n    /**\n     * @description 根据类型编码查询字典项\n     * @see [Swagger doc: 根据类型编码查询字典项](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/codeListUsingPOST)\n     *\n     * @tag通用Controller\n     */\n    post(options: { body: TBodyOfcodeListUsingPOST }): Promise<TResponseOfcodeListUsingPOST>;\n  };\n  (url: \"/dictionary/codes\"): {\n    /**\n     * @description 根据类型编码查询字典项\n     * @see [Swagger doc: 根据类型编码查询字典项](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/listUsingPOST_1)\n     *\n     * @tag通用Controller\n     */\n    post(options: { body: TBodyOflistUsingPOST_1 }): Promise<TResponseOflistUsingPOST_1>;\n  };\n  (url: \"/enumList\"): {\n    /**\n     * @description 获取当前系统指定枚举 List\n     * @see [Swagger doc: 获取当前系统指定枚举 List](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/enumListsUsingPOST)\n     *\n     * @tag通用Controller\n     */\n    post(options: { body: TBodyOfenumListsUsingPOST }): Promise<TResponseOfenumListsUsingPOST>;\n  };\n  (url: \"/enums\"): {\n    /**\n     * @description 获取当前系统指定枚举 Map\n     * @see [Swagger doc: 获取当前系统指定枚举 Map](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/enumsUsingPOST)\n     *\n     * @tag通用Controller\n     */\n    post(options: { body: TBodyOfenumsUsingPOST }): Promise<TResponseOfenumsUsingPOST>;\n  };\n  (url: \"/menu/menus\"): {\n    /**\n     * @description 查询用户可用的所有菜单\n     * @see [Swagger doc: 查询用户可用的所有菜单](http://120.79.250.86:8761/doc.html#/认证模块/资源/myMenusUsingGET)\n     *\n     * @tag资源\n     */\n    get(options: { query: TQueryOfmyMenusUsingGET }): Promise<TResponseOfmyMenusUsingGET>;\n  };\n  (url: \"/menu/router\"): {\n    /**\n     * @description 查询用户可用的所有菜单路由树\n     * @see [Swagger doc: 查询用户可用的所有菜单路由树](http://120.79.250.86:8761/doc.html#/认证模块/资源/myRouterUsingGET)\n     *\n     * @tag资源\n     */\n    get(options: { query: TQueryOfmyRouterUsingGET }): Promise<TResponseOfmyRouterUsingGET>;\n  };\n  (url: \"/noToken/login\"): {\n    /**\n     * @description 登录接口\n     * @see [Swagger doc: 登录接口](http://120.79.250.86:8761/doc.html#/认证模块/登录接口/loginUsingPOST)\n     *\n     * @tag登录接口\n     */\n    post(options: { body: TBodyOfloginUsingPOST }): Promise<TResponseOfloginUsingPOST>;\n  };\n  (url: \"/noToken/logout\"): {\n    /**\n     * @description 退出\n     * @see [Swagger doc: 退出](http://120.79.250.86:8761/doc.html#/认证模块/登录接口/logoutUsingPOST_1)\n     *\n     * @tag登录接口\n     */\n    post(options: { query: TQueryOflogoutUsingPOST_1 }): Promise<TResponseOflogoutUsingPOST_1>;\n  };\n  (url: \"/parameter/findParams\"): {\n    /**\n     * @description 根据key批量获取系统参数\n     * @see [Swagger doc: 根据key批量获取系统参数](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/findParamsUsingPOST)\n     *\n     * @tag通用Controller\n     */\n    post(options: { body: TBodyOffindParamsUsingPOST }): Promise<TResponseOffindParamsUsingPOST>;\n  };\n  (url: \"/parameter/value\"): {\n    /**\n     * @description 根据key获取系统参数\n     * @see [Swagger doc: 根据key获取系统参数](http://120.79.250.86:8761/doc.html#/认证模块/通用Controller/getValueUsingGET)\n     *\n     * @tag通用Controller\n     */\n    get(options: { query: TQueryOfgetValueUsingGET }): Promise<TResponseOfgetValueUsingGET>;\n  };\n  (url: \"/resource/visible\"): {\n    /**\n     * @description 查询用户可用的所有资源\n     * @see [Swagger doc: 查询用户可用的所有资源](http://120.79.250.86:8761/doc.html#/认证模块/资源/visibleUsingGET)\n     *\n     * @tag资源\n     */\n    get(options: { query: TQueryOfvisibleUsingGET }): Promise<TResponseOfvisibleUsingGET>;\n  };\n}\n\nexport interface RequestProvider {\n  get(url: string, options: any): Promise<any>;\n  post(url: string, options: any): Promise<any>;\n  put(url: string, options: any): Promise<any>;\n  head(url: string, options: any): Promise<any>;\n  delete(url: string, options: any): Promise<any>;\n  patch(url: string, options: any): Promise<any>;\n}\n\n/**\n * create a request by a provider\n */\nexport function createRequest(provider: RequestProvider): IApiFn {\n  return (url: string) => {\n    return {\n      get: (options: any) => provider.get(url, options),\n      post: (options: any) => provider.post(url, options),\n      put: (options: any) => provider.put(url, options),\n      head: (options: any) => provider.head(url, options),\n      delete: (options: any) => provider.delete(url, options),\n      patch: (options: any) => provider.patch(url, options),\n    };\n  };\n}\n"],"mappings":";AA4mBO,SAAS,cAAc,UAAmC;AAC/D,SAAO,CAAC,QAAgB;AACtB,WAAO;AAAA,MACL,KAAK,CAAC,YAAiB,SAAS,IAAI,KAAK,OAAO;AAAA,MAChD,MAAM,CAAC,YAAiB,SAAS,KAAK,KAAK,OAAO;AAAA,MAClD,KAAK,CAAC,YAAiB,SAAS,IAAI,KAAK,OAAO;AAAA,MAChD,MAAM,CAAC,YAAiB,SAAS,KAAK,KAAK,OAAO;AAAA,MAClD,QAAQ,CAAC,YAAiB,SAAS,OAAO,KAAK,OAAO;AAAA,MACtD,OAAO,CAAC,YAAiB,SAAS,MAAM,KAAK,OAAO;AAAA,IACtD;AAAA,EACF;AACF;","names":[]}